long long moduloMultiplication(long long a,
                            long long b)
{
    long long res = 0; // Initialize result

    // Update a if it is more than
    // or equal to mod
    a %= mod;

    while (b)
    {
        // If b is odd, add a with result
        if (b & 1)
            res = (res + a) % mod;

        // Here we assume that doing 2*a
        // doesn't cause overflow
        a = (2 * a) % mod;

        b >>= 1; // b = b / 2
    }

    return res;
}

ANOTHER:
ll mul(ll a,ll b){
    if(b == 0) return 0;
    if(b == 1) return a % mod;
    ll m = mul(a, b / 2);
    m = (m + m) % mod;
    if(b & 1) m = (m + a) % mod;
    return m;
    }